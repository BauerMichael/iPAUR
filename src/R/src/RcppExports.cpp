// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// ROF
void ROF(const NumericMatrix& src, NumericMatrix& dst, float lambda, float tau, int iter, int height, int width, int channel);
RcppExport SEXP TotVar_ROF(SEXP srcSEXP, SEXP dstSEXP, SEXP lambdaSEXP, SEXP tauSEXP, SEXP iterSEXP, SEXP heightSEXP, SEXP widthSEXP, SEXP channelSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const NumericMatrix& >::type src(srcSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type dst(dstSEXP);
    Rcpp::traits::input_parameter< float >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< float >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< int >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< int >::type height(heightSEXP);
    Rcpp::traits::input_parameter< int >::type width(widthSEXP);
    Rcpp::traits::input_parameter< int >::type channel(channelSEXP);
    ROF(src, dst, lambda, tau, iter, height, width, channel);
    return R_NilValue;
END_RCPP
}
// TVL1
void TVL1(const NumericMatrix& src, NumericMatrix& dst, float lambda, float tau, int iter, int height, int width, int channel);
RcppExport SEXP TotVar_TVL1(SEXP srcSEXP, SEXP dstSEXP, SEXP lambdaSEXP, SEXP tauSEXP, SEXP iterSEXP, SEXP heightSEXP, SEXP widthSEXP, SEXP channelSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const NumericMatrix& >::type src(srcSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type dst(dstSEXP);
    Rcpp::traits::input_parameter< float >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< float >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< int >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< int >::type height(heightSEXP);
    Rcpp::traits::input_parameter< int >::type width(widthSEXP);
    Rcpp::traits::input_parameter< int >::type channel(channelSEXP);
    TVL1(src, dst, lambda, tau, iter, height, width, channel);
    return R_NilValue;
END_RCPP
}
// SobelOperator
void SobelOperator(const NumericMatrix& src, NumericMatrix& dst, int height, int width, int channel);
RcppExport SEXP TotVar_SobelOperator(SEXP srcSEXP, SEXP dstSEXP, SEXP heightSEXP, SEXP widthSEXP, SEXP channelSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const NumericMatrix& >::type src(srcSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type dst(dstSEXP);
    Rcpp::traits::input_parameter< int >::type height(heightSEXP);
    Rcpp::traits::input_parameter< int >::type width(widthSEXP);
    Rcpp::traits::input_parameter< int >::type channel(channelSEXP);
    SobelOperator(src, dst, height, width, channel);
    return R_NilValue;
END_RCPP
}
// HuberROF
void HuberROF(const NumericMatrix& src, NumericMatrix& dst, float alpha, float lambda, float tau, int iter, int height, int width, int channel);
RcppExport SEXP TotVar_HuberROF(SEXP srcSEXP, SEXP dstSEXP, SEXP alphaSEXP, SEXP lambdaSEXP, SEXP tauSEXP, SEXP iterSEXP, SEXP heightSEXP, SEXP widthSEXP, SEXP channelSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const NumericMatrix& >::type src(srcSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type dst(dstSEXP);
    Rcpp::traits::input_parameter< float >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< float >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< float >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< int >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< int >::type height(heightSEXP);
    Rcpp::traits::input_parameter< int >::type width(widthSEXP);
    Rcpp::traits::input_parameter< int >::type channel(channelSEXP);
    HuberROF(src, dst, alpha, lambda, tau, iter, height, width, channel);
    return R_NilValue;
END_RCPP
}
// Inpaint
void Inpaint(const NumericMatrix& src, NumericMatrix& dst, float lambda, float tau, int iter, int height, int width, int channel);
RcppExport SEXP TotVar_Inpaint(SEXP srcSEXP, SEXP dstSEXP, SEXP lambdaSEXP, SEXP tauSEXP, SEXP iterSEXP, SEXP heightSEXP, SEXP widthSEXP, SEXP channelSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const NumericMatrix& >::type src(srcSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type dst(dstSEXP);
    Rcpp::traits::input_parameter< float >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< float >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< int >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< int >::type height(heightSEXP);
    Rcpp::traits::input_parameter< int >::type width(widthSEXP);
    Rcpp::traits::input_parameter< int >::type channel(channelSEXP);
    Inpaint(src, dst, lambda, tau, iter, height, width, channel);
    return R_NilValue;
END_RCPP
}
// RealTime
void RealTime(const NumericMatrix& src, NumericMatrix& dst, float alpha, float lambda, float tau, int cartoon, int iter, int height, int width, int channel);
RcppExport SEXP TotVar_RealTime(SEXP srcSEXP, SEXP dstSEXP, SEXP alphaSEXP, SEXP lambdaSEXP, SEXP tauSEXP, SEXP cartoonSEXP, SEXP iterSEXP, SEXP heightSEXP, SEXP widthSEXP, SEXP channelSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const NumericMatrix& >::type src(srcSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type dst(dstSEXP);
    Rcpp::traits::input_parameter< float >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< float >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< float >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< int >::type cartoon(cartoonSEXP);
    Rcpp::traits::input_parameter< int >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< int >::type height(heightSEXP);
    Rcpp::traits::input_parameter< int >::type width(widthSEXP);
    Rcpp::traits::input_parameter< int >::type channel(channelSEXP);
    RealTime(src, dst, alpha, lambda, tau, cartoon, iter, height, width, channel);
    return R_NilValue;
END_RCPP
}
